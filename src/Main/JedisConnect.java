package Main;

import java.util.List;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPool;
import redis.clients.jedis.JedisPoolConfig;
import redis.clients.jedis.Transaction;



public class JedisConnect {
	
	static Jedis jedis;
	
	public static void main(String[] args) {
		
		tsac();
//		jedisPoolTest();
//		jedisTest();

	}


	//事务操作
	public static void tsac(){
		
		
		try {
			
			if(null == jedis){
			
				JedisPoolConfig poocfg = new JedisPoolConfig();
				//最大空闲数
				poocfg.setMaxIdle(50);
				//最大连接数
				poocfg.setMaxTotal(100);
				//最大等待毫秒数
				poocfg.setMaxWaitMillis(20000);
				//使用配置创建连接池
				JedisPool pool = new JedisPool(poocfg,"localhost");
				//从连接池中获取单个连接
			    jedis = pool.getResource();
			}
			
			String key1 = "t1";
			String key2 = "t2";
			String key3 = "t3";
			
			String a = "a";
			
//			jedis.watch(key1,key2,key3);
			//标记事务开始
			Transaction tran = jedis.multi();
			
	
			
			
			
			tran.set(key1, "aced00057372001e636f6d2e746b622e7365727665722e6d6f64656c2e4f72646572496e666f8494f97a3676752c020061490007636f73547970654a000269644900087061794d6f6e65794900097265616c4d6f6e657949000a73616c65416d6f756e7449000d736572766963654368617267654a000a73796e53657254696d654c00086163526561736f6e7400124c6a6176612f6c616e672f537472696e673b4c00076163537461746571007e00014c0006616354696d6571007e00014c000a6163717569726572494471007e00014c00076170705479706571007e00014c000a62616c616e636550726571007e00014c000662616e6b4e6f71007e00014c000862757369436f646571007e00014c000a627573694465764d616371007e00014c000b627573694465764e616d6571007e00014c000b627573694465765479706571007e00014c000a62757369466c6f77494471007e00014c000a6275736953746174757371007e00014c00086275736954696d6571007e00014c0008627573695479706571007e00014c000b627573695479706550726571007e00014c0006636172644e6f71007e00014c000d636172644f706572744e616d6571007e00014c000b636172645072696e744e6f71007e00014c0008636172645479706571007e00014c000b636172645479706553756271007e00014c000b6361726456657273696f6e71007e00014c00096368696c645479706571007e00014c000863697479436f646571007e00014c000e636f6d70617269736f6e4461746571007e00014c00116372656174654f7264657253746174757371007e00014c000664657656657271007e00014c000866696c654e616d6571007e00014c000a66696c6553657269616c71007e00014c000a676f6f6473416d6f757471007e00014c0007676f6f6473494471007e00014c0007676f6f64734e6f71007e00014c000a6964656e746974794e6f71007e00014c0004696d656971007e00014c000c696e647573747279436f646571007e00014c000c6973436f6d70617269736f6e71007e00014c0006697353656e6471007e00014c00096a66476f6f6473496471007e00014c00086c6174697475646571007e00014c00086c6f636b466c616771007e00014c00096c6f6e67697475646571007e00014c00046d61633271007e00014c00076d61634164647271007e00014c00056d61634e6f71007e00014c00076d61735479706571007e00014c00076d6572436f646571007e00014c00076d65726368496471007e00014c00086d6f62696c654e6f71007e00014c00056d7955696471007e00014c000c6f66666c696e654f7264657271007e00014c000a6f70657261746f72494471007e00014c000d6f72646572476f6f64734e756d71007e00014c00076f72646572494471007e00014c00076f726465724e6f71007e00014c000b6f7264657253746174757371007e00014c00096f746865725479706571007e00014c000970617942656c6f6e6771007e00014c000770617954696d657400104c6a6176612f7574696c2f446174653b4c000a70686f6e654d6f64656c71007e00014c0007706d74466c616771007e00014c0009706f73466c6f774e6f71007e00014c0005706f73494471007e00014c0007706f73496e666f71007e00014c0008706f734f7264657271007e00014c000b7072655061796d6f6e657971007e00014c00087072655365716e6f71007e00014c0008707265706179496471007e00014c000770726f466c616771007e00014c000a72656675736554696d6571007e00024c00097265706179466c616771007e00014c00097265766572466c616771007e00014c00097354797065436f646571007e00014c0010736572766963654368617267654d736771007e00014c000b73657276696365436f646571007e00014c000773756d6d61727971007e00014c000773767254696d6571007e00024c000973796e53746174757371007e00014c000773797354696d6571007e00024c000374616371007e00014c00077465724461746571007e00014c000774657254696d6571007e00014c000874657374466c616771007e00014c000f746869726442757369466c6f77494471007e00014c000b74687265654d656368496471007e00014c000c74726164654465765479706571007e00014c00097472616e7354696d6571007e00014c000d7472616e7354797065466c616771007e00014c000375696471007e00014c0008757365724e616d6571007e00014c00047575696471007e000178700000000100000000000000000000000100000001000000010000000000000000000000007070707074000133740004313135327400043130303674000631303032333174000c41353344374530303038454174000a544b425f4b545f323832740001337074000231357074000132707400103331323030343130303830313933373874000fe7bb8de585b4e4b880e58da1e9809a740010333132303034313030383031393337387070707400026135740004333132307070740009694f5320392e332e31707070707070707400043132303174000131740001307074000832322e3533353933707400083131332e39343336740008643431366238623170707400023830740001307400106463626334383563626430646363316270707074000b313539313937313139323070707400143230313830363236313131393234353738363939740001307400023030707372000e6a6176612e7574696c2e44617465686a81014b59741903000078707708000001643a1");
			tran.set(key2, "aced00057372001e636f6d2e746b622e7365727665722e6d6f64656c2e4f72646572496e666f8494f97a3676752c020061490007636f73547970654a000269644900087061794d6f6e65794900097265616c4d6f6e657949000a73616c65416d6f756e7449000d736572766963654368617267654a000a73796e53657254696d654c00086163526561736f6e7400124c6a6176612f6c616e672f537472696e673b4c00076163537461746571007e00014c0006616354696d6571007e00014c000a6163717569726572494471007e00014c00076170705479706571007e00014c000a62616c616e636550726571007e00014c000662616e6b4e6f71007e00014c000862757369436f646571007e00014c000a627573694465764d616371007e00014c000b627573694465764e616d6571007e00014c000b627573694465765479706571007e00014c000a62757369466c6f77494471007e00014c000a6275736953746174757371007e00014c00086275736954696d6571007e00014c0008627573695479706571007e00014c000b627573695479706550726571007e00014c0006636172644e6f71007e00014c000d636172644f706572744e616d6571007e00014c000b636172645072696e744e6f71007e00014c0008636172645479706571007e00014c000b636172645479706553756271007e00014c000b6361726456657273696f6e71007e00014c00096368696c645479706571007e00014c000863697479436f646571007e00014c000e636f6d70617269736f6e4461746571007e00014c00116372656174654f7264657253746174757371007e00014c000664657656657271007e00014c000866696c654e616d6571007e00014c000a66696c6553657269616c71007e00014c000a676f6f6473416d6f757471007e00014c0007676f6f6473494471007e00014c0007676f6f64734e6f71007e00014c000a6964656e746974794e6f71007e00014c0004696d656971007e00014c000c696e647573747279436f646571007e00014c000c6973436f6d70617269736f6e71007e00014c0006697353656e6471007e00014c00096a66476f6f6473496471007e00014c00086c6174697475646571007e00014c00086c6f636b466c616771007e00014c00096c6f6e67697475646571007e00014c00046d61633271007e00014c00076d61634164647271007e00014c00056d61634e6f71007e00014c00076d61735479706571007e00014c00076d6572436f646571007e00014c00076d65726368496471007e00014c00086d6f62696c654e6f71007e00014c00056d7955696471007e00014c000c6f66666c696e654f7264657271007e00014c000a6f70657261746f72494471007e00014c000d6f72646572476f6f64734e756d71007e00014c00076f72646572494471007e00014c00076f726465724e6f71007e00014c000b6f7264657253746174757371007e00014c00096f746865725479706571007e00014c000970617942656c6f6e6771007e00014c000770617954696d657400104c6a6176612f7574696c2f446174653b4c000a70686f6e654d6f64656c71007e00014c0007706d74466c616771007e00014c0009706f73466c6f774e6f71007e00014c0005706f73494471007e00014c0007706f73496e666f71007e00014c0008706f734f7264657271007e00014c000b7072655061796d6f6e657971007e00014c00087072655365716e6f71007e00014c0008707265706179496471007e00014c000770726f466c616771007e00014c000a72656675736554696d6571007e00024c00097265706179466c616771007e00014c00097265766572466c616771007e00014c00097354797065436f646571007e00014c0010736572766963654368617267654d736771007e00014c000b73657276696365436f646571007e00014c000773756d6d61727971007e00014c000773767254696d6571007e00024c000973796e53746174757371007e00014c000773797354696d6571007e00024c000374616371007e00014c00077465724461746571007e00014c000774657254696d6571007e00014c000874657374466c616771007e00014c000f746869726442757369466c6f77494471007e00014c000b74687265654d656368496471007e00014c000c74726164654465765479706571007e00014c00097472616e7354696d6571007e00014c000d7472616e7354797065466c616771007e00014c000375696471007e00014c0008757365724e616d6571007e00014c00047575696471007e000178700000000100000000000000000000000100000001000000010000000000000000000000007070707074000133740004313135327400043130303674000631303032333174000c41353344374530303038454174000a544b425f4b545f323832740001337074000231357074000132707400103331323030343130303830313933373874000fe7bb8de585b4e4b880e58da1e9809a740010333132303034313030383031393337387070707400026135740004333132307070740009694f5320392e332e31707070707070707400043132303174000131740001307074000832322e3533353933707400083131332e39343336740008643431366238623170707400023830740001307400106463626334383563626430646363316270707074000b313539313937313139323070707400143230313830363236313131393234353738363939740001307400023030707372000e6a6176612e7574696c2e44617465686a81014b59741903000078707708000001643a1");

			//取消事务 放弃事务中已有的命令 并且取消事务标记（消除multi()效果）
//			tran.discard();
//			tran = jedis.multi();
			if(!a.equals("a"))
				tran.set(key3, "aced000573720028636f6d2e746b622e7365727665722e6d6f64656c2e636f6d6d6f6e2e42757369466c6f77496e666faddd86ab9065b0c602003549000c616674657242616c616e6365490006626566616d74490005635479706549000269644900087061794d6f6e65794900087461635472616e734c0007617574685365717400124c6a6176612f6c616e672f537472696e673b4c000a627573694465764d616371007e00014c000b627573694465764e616d6571007e00014c000b627573694465765479706571007e00014c000a6275736953746174757371007e00014c0009636172644368696c6471007e00014c0008636172644d61696e71007e00014c0006636172644e6f71007e00014c0009636172644f7468657271007e00014c000763617264636e7471007e00014c000b6361726476616c4461746571007e00014c000663686970496471007e00014c00046369747971007e00014c0009636f6d70757474616771007e00014c000664657656657271007e00014c000966696c655472616e7371007e00014c000d66696c655472616e7354696d657400104c6a6176612f7574696c2f446174653b4c0006666c6f77494471007e00014c0008686f73746461746571007e00014c0008686f737474696d6571007e00014c0008696e64757374727971007e00014c00066b657976657271007e00014c00036d616371007e00014c00046d61633171007e00014c00046d61633271007e00014c00076d6572436f646571007e00014c00066f6666636e7471007e00014c00066f7065724e6f71007e00014c0009706179466c6f77494471007e00014c000b7061794e6f53657276657271007e00014c00077061795479706571007e00014c0005706f73494471007e00014c0005706f734e6f71007e00014c000672616e646f6d71007e00014c0006726561736f6e71007e00014c0008726573657276656471007e00014c0008736574744461746571007e00014c0008736574746461746571007e00014c000673746174757371007e00014c000773797354696d6571007e00024c000374616371007e00014c000774616354696d6571007e00024c000c7468726964466c6f7753657171007e00014c000c74726164654465765479706571007e00014c000774786e6461746571007e00014c000774786e74696d6571007e00014c000a76657273696e6e616d6571007e00017870000000000000048000000000009e3c3000000001000000007074000c41353344374530303038454174000a544b425f4b545f32383274000133740001317400026135740002383074001033313230303431303038303139333738707400043031356374000832303530313233317400086333373937313638740004333132307400023031740009694f5320392e332e3170707400086130333730303936707070740002303070740008633337323831643974000864343136623862317074000430303030707400143230313830363236313131393234353738363939707074000c33313830303130303033313070740008376332306634643070707070740001597372000e6a6176612e7574696c2e44617465686a81014b59741903000078707708000001643a2e704678707070707400083230313830363236740006313134313230740005312e322e38");
			
//			jedis.set(key1, "qqqq");
			System.err.println(jedis.get(key1));
			
			
			//所有命令的返回值
			List<Object> os = tran.exec();
			for (Object object : os) {
				System.err.println(object);
			}
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}


	/**
	 * 连接池测试
	 */
	public static void jedisPoolTest(){
		
		JedisPoolConfig poocfg = new JedisPoolConfig();
		//最大空闲数
		poocfg.setMaxIdle(50);
		//最大连接数
		poocfg.setMaxTotal(100);
		//最大等待毫秒数
		poocfg.setMaxWaitMillis(20000);
		//使用配置创建连接池
		JedisPool pool = new JedisPool(poocfg,"localhost");
		//从连接池中获取单个连接
		Jedis jedis = pool.getResource();
		//如果需要密码
		//jedis.auth("123456");
		jedis.set("TEST", "连接池测试");
		String test = jedis.get("TEST");
		System.err.println("取值==》" + test);
		
		
		
		jedis.close();
	}

	/**
	 * 直接测试jedis
	 */
	public static void jedisTest(){
		Jedis jedis = new Jedis("localhost",6379);
		int i = 0;
		try {
			
			long start = System.currentTimeMillis();
			while(true){
				long end = System.currentTimeMillis();
				if(end - start >= 1000){
					break;
				}
				
				jedis.set("TESTL_"+ i, i+"");
				i++;
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		jedis.close();
		System.err.println("当前redis数据量为:"+jedis.dbSize());
		System.err.println("一秒钟写入次数为:"+i+"");
	}
}
